{"version":3,"sources":["ImageZoom.tsx"],"names":["AnimatedImage","Animated","createAnimatedComponent","Image","styles","StyleSheet","create","container","flex","content","flexGrow","position","overflow","loader","absoluteFillObject","backgroundColor","ImageZoom","uri","minScale","maxScale","minPanPointers","maxPanPointers","isPanEnabled","isPinchEnabled","onLoadEnd","onInteractionStart","onInteractionEnd","onPinchStart","onPinchEnd","onPanStart","onPanEnd","style","containerStyle","imageContainerStyle","activityIndicatorProps","renderLoader","props","panRef","pinchRef","isInteracting","isPanning","isPinching","isLoading","setIsLoading","state","setState","canInteract","centerX","centerY","scale","initialFocalX","initialFocalY","focalX","focalY","translateX","translateY","onInteractionStarted","current","onInteractionEnded","onPinchStarted","onPinchEnded","onPanStarted","onPanEnded","panHandler","onActive","event","value","translationX","translationY","onFinish","pinchHandler","onStart","animatedStyle","transform","onLayout","nativeEvent","layout","x","y","width","height","onImageLoadEnd"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  ActivityIndicator,\n  Image,\n  LayoutChangeEvent,\n  StyleSheet,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerGestureEvent,\n  PinchGestureHandler,\n  PinchGestureHandlerEventPayload,\n  PinchGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { clamp } from './helpers';\n\nimport type { ImageZoomProps } from './types';\n\nconst AnimatedImage = Animated.createAnimatedComponent(Image);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    flexGrow: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  loader: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'whitesmoke',\n  },\n});\n\nexport default function ImageZoom({\n  uri = '',\n  minScale = 1,\n  maxScale = 5,\n  minPanPointers = 2,\n  maxPanPointers = 2,\n  isPanEnabled = true,\n  isPinchEnabled = true,\n  onLoadEnd,\n  onInteractionStart,\n  onInteractionEnd,\n  onPinchStart,\n  onPinchEnd,\n  onPanStart,\n  onPanEnd,\n  style = {},\n  containerStyle = {},\n  imageContainerStyle = {},\n  activityIndicatorProps = {},\n  renderLoader,\n  ...props\n}: ImageZoomProps) {\n  const panRef = useRef();\n  const pinchRef = useRef();\n\n  const isInteracting = useRef(false);\n  const isPanning = useRef(false);\n  const isPinching = useRef(false);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [state, setState] = useState({\n    canInteract: false,\n    centerX: 0,\n    centerY: 0,\n  });\n\n  const { canInteract, centerX, centerY } = state;\n\n  const scale = useSharedValue(1);\n  const initialFocalX = useSharedValue(0);\n  const initialFocalY = useSharedValue(0);\n  const focalX = useSharedValue(0);\n  const focalY = useSharedValue(0);\n  const translateX = useSharedValue(0);\n  const translateY = useSharedValue(0);\n\n  const onInteractionStarted = () => {\n    if (!isInteracting.current) {\n      isInteracting.current = true;\n      onInteractionStart?.();\n    }\n  };\n\n  const onInteractionEnded = () => {\n    if (isInteracting.current && !isPinching.current && !isPanning.current) {\n      isInteracting.current = false;\n      onInteractionEnd?.();\n    }\n  };\n\n  const onPinchStarted = () => {\n    onInteractionStarted();\n    isPinching.current = true;\n    onPinchStart?.();\n  };\n\n  const onPinchEnded = () => {\n    isPinching.current = false;\n    onPinchEnd?.();\n    onInteractionEnded();\n  };\n\n  const onPanStarted = () => {\n    onInteractionStarted();\n    isPanning.current = true;\n    onPanStart?.();\n  };\n\n  const onPanEnded = () => {\n    isPanning.current = false;\n    onPanEnd?.();\n    onInteractionEnded();\n  };\n\n  const panHandler = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>({\n    onActive: (event: PanGestureHandlerEventPayload) => {\n      translateX.value = event.translationX;\n      translateY.value = event.translationY;\n    },\n    onFinish: () => {\n      translateX.value = withTiming(0);\n      translateY.value = withTiming(0);\n    },\n  });\n\n  const pinchHandler =\n    useAnimatedGestureHandler<PinchGestureHandlerGestureEvent>({\n      onStart: (event: PinchGestureHandlerEventPayload) => {\n        initialFocalX.value = event.focalX;\n        initialFocalY.value = event.focalY;\n      },\n      onActive: (event: PinchGestureHandlerEventPayload) => {\n        // onStart: focalX & focalY result both to 0 on Android\n        if (initialFocalX.value === 0 && initialFocalY.value === 0) {\n          initialFocalX.value = event.focalX;\n          initialFocalY.value = event.focalY;\n        }\n        scale.value = clamp(event.scale, minScale, maxScale);\n        focalX.value = (centerX - initialFocalX.value) * (scale.value - 1);\n        focalY.value = (centerY - initialFocalY.value) * (scale.value - 1);\n      },\n      onFinish: () => {\n        scale.value = withTiming(1);\n        focalX.value = withTiming(0);\n        focalY.value = withTiming(0);\n        initialFocalX.value = 0;\n        initialFocalY.value = 0;\n      },\n    });\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: translateX.value },\n      { translateY: translateY.value },\n      { translateX: focalX.value },\n      { translateY: focalY.value },\n      { scale: scale.value },\n    ],\n  }));\n\n  const onLayout = ({\n    nativeEvent: {\n      layout: { x, y, width, height },\n    },\n  }: LayoutChangeEvent) => {\n    setState((current) => ({\n      ...current,\n      canInteract: true,\n      centerX: x + width / 2,\n      centerY: y + height / 2,\n    }));\n  };\n\n  const onImageLoadEnd = () => {\n    onLoadEnd?.();\n    setIsLoading(false);\n  };\n\n  return (\n    <PinchGestureHandler\n      ref={pinchRef}\n      simultaneousHandlers={[panRef]}\n      onGestureEvent={pinchHandler}\n      onActivated={onPinchStarted}\n      onCancelled={onPinchEnded}\n      onEnded={onPinchEnded}\n      onFailed={onPinchEnded}\n      enabled={isPinchEnabled && canInteract}\n    >\n      <Animated.View style={[styles.container, containerStyle]}>\n        <PanGestureHandler\n          ref={panRef}\n          simultaneousHandlers={[pinchRef]}\n          onGestureEvent={panHandler}\n          onActivated={onPanStarted}\n          onCancelled={onPanEnded}\n          onEnded={onPanEnded}\n          onFailed={onPanEnded}\n          minPointers={minPanPointers}\n          maxPointers={maxPanPointers}\n          enabled={isPanEnabled && canInteract}\n        >\n          <Animated.View\n            onLayout={onLayout}\n            style={[styles.content, imageContainerStyle]}\n          >\n            <AnimatedImage\n              style={[styles.container, style, animatedStyle]}\n              source={{ uri }}\n              resizeMode=\"contain\"\n              onLoadEnd={onImageLoadEnd}\n              {...props}\n            />\n            {isLoading &&\n              (renderLoader ? (\n                renderLoader()\n              ) : (\n                <ActivityIndicator\n                  size=\"small\"\n                  style={styles.loader}\n                  color=\"dimgrey\"\n                  {...activityIndicatorProps}\n                />\n              ))}\n          </Animated.View>\n        </PanGestureHandler>\n      </Animated.View>\n    </PinchGestureHandler>\n  );\n}\n"]}